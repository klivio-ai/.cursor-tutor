#!/bin/bash

# Script pour tester la connexion √† Supabase
echo "üîç Test de connexion √† Supabase..."

# V√©rifier si les variables d'environnement sont d√©finies
if [ -z "$NEXT_PUBLIC_SUPABASE_URL" ]; then
    echo "‚ùå NEXT_PUBLIC_SUPABASE_URL n'est pas d√©finie"
    echo "üìù Copiez env.example vers .env.local et configurez vos variables"
    exit 1
fi

if [ -z "$NEXT_PUBLIC_SUPABASE_ANON_KEY" ]; then
    echo "‚ùå NEXT_PUBLIC_SUPABASE_ANON_KEY n'est pas d√©finie"
    echo "üìù Copiez env.example vers .env.local et configurez vos variables"
    exit 1
fi

echo "‚úÖ Variables d'environnement configur√©es"
echo "URL: $NEXT_PUBLIC_SUPABASE_URL"

# Tester la connexion √† l'API
echo "üåê Test de connexion √† l'API Supabase..."
response=$(curl -s -o /dev/null -w "%{http_code}" "$NEXT_PUBLIC_SUPABASE_URL/rest/v1/")

if [ "$response" = "200" ]; then
    echo "‚úÖ Connexion √† l'API r√©ussie"
else
    echo "‚ùå √âchec de connexion √† l'API (code: $response)"
    echo "üîß V√©rifiez que Supabase est d√©marr√© avec: supabase start"
    exit 1
fi

# Tester la connexion √† la base de donn√©es
echo "üóÑÔ∏è Test de connexion √† la base de donn√©es..."
if command -v psql &> /dev/null; then
    db_url=$(supabase db url 2>/dev/null)
    if [ $? -eq 0 ]; then
        echo "‚úÖ Connexion √† la base de donn√©es r√©ussie"
        echo "URL DB: $db_url"
    else
        echo "‚ùå √âchec de connexion √† la base de donn√©es"
        echo "üîß V√©rifiez que Supabase est d√©marr√© avec: supabase start"
    fi
else
    echo "‚ö†Ô∏è psql n'est pas install√©, impossible de tester la connexion DB"
fi

# Tester les tables
echo "üìã Test des tables..."
tables_response=$(curl -s "$NEXT_PUBLIC_SUPABASE_URL/rest/v1/" \
  -H "apikey: $NEXT_PUBLIC_SUPABASE_ANON_KEY" \
  -H "Authorization: Bearer $NEXT_PUBLIC_SUPABASE_ANON_KEY")

if echo "$tables_response" | grep -q "users"; then
    echo "‚úÖ Table 'users' trouv√©e"
else
    echo "‚ùå Table 'users' non trouv√©e"
    echo "üîß Ex√©cutez le script de cr√©ation des tables"
fi

if echo "$tables_response" | grep -q "properties"; then
    echo "‚úÖ Table 'properties' trouv√©e"
else
    echo "‚ùå Table 'properties' non trouv√©e"
fi

if echo "$tables_response" | grep -q "categories"; then
    echo "‚úÖ Table 'categories' trouv√©e"
else
    echo "‚ùå Table 'categories' non trouv√©e"
fi

echo ""
echo "üéâ Test de connexion termin√© !"
echo ""
echo "üìä Pour d√©marrer Supabase : ./scripts/setup-supabase-local.sh"
echo "üåê Interface d'administration : $(supabase status --output json 2>/dev/null | jq -r '.studio.url' 2>/dev/null || echo 'Supabase non d√©marr√©')" 