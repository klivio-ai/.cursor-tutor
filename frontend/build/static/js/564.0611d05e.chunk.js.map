{"version":3,"file":"static/js/564.0611d05e.chunk.js","mappings":"yQAIA,MAAMA,EAAS,CACX,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,WAGzC,SAASC,EAAgBC,GAA4B,IAA3B,SAAEC,EAAQ,WAAEC,GAAYF,EACvD,MAAMG,GAAOC,EAAAA,EAAAA,UAAQ,KACnB,IAAKH,IAAaC,EAAY,MAAO,GAErC,MAAMG,EAAc,IAAIC,IAAIJ,EAAWK,KAAIC,GAAK,CAACA,EAAEC,GAAID,EAAEE,SACnDC,EAAoB,CAAC,EAU3B,OARAV,EAASW,SAAQC,IACf,MAAMC,EAAeT,EAAYU,IAAIF,EAAQG,cAAgB,QACxDL,EAAkBG,KACrBH,EAAkBG,GAAgB,GAEpCH,EAAkBG,IAAiBG,OAAOJ,EAAQK,SAAW,CAAC,IAGzDC,OAAOC,QAAQT,GACnBJ,KAAIc,IAAA,IAAEX,EAAMY,GAAMD,EAAA,MAAM,CAAEX,OAAMY,QAAO,IACvCC,QAAOC,GAAQA,EAAKF,MAAQ,GAAE,GAChC,CAACrB,EAAUC,IAERuB,GAAmBrB,EAAAA,EAAAA,UAAQ,IAC9BkB,GAAU,EAACI,EAAAA,EAAAA,GAAeJ,GAAQ,YACnC,IAGF,OAAKnB,GAAwB,IAAhBA,EAAKwB,QAShBC,EAAAA,EAAAA,KAACC,EAAAA,EAAmB,CAACC,MAAM,OAAOC,OAAQ,IAAIC,UAC5CC,EAAAA,EAAAA,MAACC,EAAAA,EAAQ,CAAAF,SAAA,EACPJ,EAAAA,EAAAA,KAACO,EAAAA,EAAO,CAACC,UAAWX,KACpBG,EAAAA,EAAAA,KAACS,EAAAA,EAAM,KACPT,EAAAA,EAAAA,KAACU,EAAAA,EAAG,CACFnC,KAAMA,EACNoC,GAAG,MACHC,GAAG,MACHC,WAAW,EACXC,YAAa,IACbC,KAAK,UACLC,QAAQ,QACRC,QAAQ,OAAMb,SAEb7B,EAAKI,KAAI,CAACuC,EAAOC,KAChBnB,EAAAA,EAAAA,KAACoB,EAAAA,EAAI,CAAuBL,KAAM7C,EAAOiD,EAAQjD,EAAO6B,SAAQ,QAAAsB,OAA7CF,cAtBzBnB,EAAAA,EAAAA,KAAA,OAAKsB,UAAU,oDAAmDlB,UAChEJ,EAAAA,EAAAA,KAAA,KAAGsB,UAAU,wBAAuBlB,SAAC,sCA2B7C,C","sources":["components/charts/ExpensesPieChart.js"],"sourcesContent":["import React, { useMemo } from \"react\"\nimport { Pie, PieChart, ResponsiveContainer, Tooltip, Cell, Legend } from \"recharts\"\nimport { formatCurrency } from \"../../lib/utils\"\n\nconst COLORS = [\n    '#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#AF19FF', \n    '#FF4560', '#775DD0', '#546E7A', '#26a69a', '#D10CE8'\n];\n\nexport function ExpensesPieChart({ expenses, categories }) {\n  const data = useMemo(() => {\n    if (!expenses || !categories) return []\n    \n    const categoryMap = new Map(categories.map(c => [c.id, c.name]))\n    const expenseByCategory = {}\n\n    expenses.forEach(expense => {\n      const categoryName = categoryMap.get(expense.category_id) || \"Autre\"\n      if (!expenseByCategory[categoryName]) {\n        expenseByCategory[categoryName] = 0\n      }\n      expenseByCategory[categoryName] += Number(expense.amount) || 0\n    })\n\n    return Object.entries(expenseByCategory)\n      .map(([name, value]) => ({ name, value }))\n      .filter(item => item.value > 0) // Filter out zero values\n  }, [expenses, categories])\n\n  const tooltipFormatter = useMemo(() => \n    (value) => [formatCurrency(value), \"Montant\"], \n    []\n  )\n\n  if (!data || data.length === 0) {\n    return (\n      <div className=\"flex h-[300px] w-full items-center justify-center\">\n        <p className=\"text-sm text-gray-500\">Aucune dépense à afficher.</p>\n      </div>\n    )\n  }\n\n  return (\n    <ResponsiveContainer width=\"100%\" height={350}>\n      <PieChart>\n        <Tooltip formatter={tooltipFormatter} />\n        <Legend />\n        <Pie\n          data={data}\n          cx=\"50%\"\n          cy=\"50%\"\n          labelLine={false}\n          outerRadius={110}\n          fill=\"#8884d8\"\n          dataKey=\"value\"\n          nameKey=\"name\"\n        >\n          {data.map((entry, index) => (\n            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n          ))}\n        </Pie>\n      </PieChart>\n    </ResponsiveContainer>\n  )\n}"],"names":["COLORS","ExpensesPieChart","_ref","expenses","categories","data","useMemo","categoryMap","Map","map","c","id","name","expenseByCategory","forEach","expense","categoryName","get","category_id","Number","amount","Object","entries","_ref2","value","filter","item","tooltipFormatter","formatCurrency","length","_jsx","ResponsiveContainer","width","height","children","_jsxs","PieChart","Tooltip","formatter","Legend","Pie","cx","cy","labelLine","outerRadius","fill","dataKey","nameKey","entry","index","Cell","concat","className"],"sourceRoot":""}